# Reference: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

kubeApiServer:
  enabled: true

kubeControllerManager:
  enabled: true
  endpoints:
{% filter indent(width=4) %}{% for IP in controlPlaneIPs.stdout_lines %}
  - {{IP}}
{% endfor %}{% endfilter %}
  service:
    enabled: true
    port: 10257
    targetPort: 10257
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

kubeScheduler:
  enabled: true
  endpoints:
{% filter indent(width=4) %}{% for IP in controlPlaneIPs.stdout_lines %}
  - {{IP}}
{% endfor %}{% endfilter %}
  service:
    enabled: true
    port: 10259
    targetPort: 10259
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

kubeProxy:
  enabled: true
  endpoints:
{% filter indent(width=4) %}{% for IP in controlPlaneIPs.stdout_lines %}
  - {{IP}}
{% endfor %}{% endfilter %}

kubeEtcd:
  enabled: true
  endpoints:
{% filter indent(width=4) %}{% for IP in controlPlaneIPs.stdout_lines %}
  - {{IP}}
{% endfor %}{% endfilter %}
  service:
    enabled: true
    port: 2381
    targetPort: 2381

prometheus:
  prometheusSpec:
    storageSpec:
      ## Using PersistentVolumeClaim
      ##
      volumeClaimTemplate:
        spec:
          storageClassName: {{install.prometheus_operator.prometheus.storage_claim.class_name}}
          accessModes: 
            - {{install.prometheus_operator.prometheus.storage_claim.access_mode}}
          resources:
            requests:
              storage: {{install.prometheus_operator.prometheus.storage_claim.claim_size}}

    retention: {{install.prometheus_operator.prometheus.retention}}
{% if install.prometheus_operator.prometheus.dashboard.path is defined %}
    externalUrl: {{install.prometheus_operator.prometheus.dashboard.path}}
{% endif %}

# Graphana values
# Reference: https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml

grafana:
  ingress:
    path: {{install.prometheus_operator.grafana.dashboard.path}}
  grafana.ini:
    server:
      root_url: https://{{install.prometheus_operator.grafana.dashboard.hostname|default(ansible_fqdn)|lower}}{{install.prometheus_operator.grafana.dashboard.path}}/
  persistence:
    type: pvc
    enabled: true
    storageClassName: {{install.prometheus_operator.grafana.storage_claim.class_name}}
    accessModes: 
      - {{install.prometheus_operator.grafana.storage_claim.access_mode}}
    size: {{install.prometheus_operator.grafana.storage_claim.claim_size}}
    # annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection
    # selectorLabels: {}
    # subPath: ""
    # existingClaim:

# AlertManager values
# Reference: https://prometheus.io/docs/alerting/latest/configuration/

alertmanager:
  # Reference: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#alertmanagerspec
  alertmanagerSpec:
    # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{install.prometheus_operator.alertmanager.storage_claim.class_name}}
          accessModes: 
            - {{install.prometheus_operator.alertmanager.storage_claim.access_mode}}
          resources:
            requests:
              storage: {{install.prometheus_operator.alertmanager.storage_claim.claim_size}}
{% if install.prometheus_operator.alertmanager.helm_config_values is defined %}{% filter indent(width=2) %}
  {{install.prometheus_operator.alertmanager.helm_config_values}}{% endfilter %}
{% endif -%}
