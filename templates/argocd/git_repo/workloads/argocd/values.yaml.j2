# Reference: https://github.com/argoproj/argo-helm/blob/master/charts/argo-cd/values.yaml

argo-cd:
  enabled: true
  configs:
    secret:
      createSecret: false

###[ Application Controller Settings ]#############################################################
  controller:
    name: application-controller
    clusterAdminAccess:
      enabled: true
    
    resources:
      limits:
        cpu: 500m
        memory: 640Mi
      requests:
        cpu: 250m
        memory: 384Mi

    ## Application controller metrics configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

###[ Dex Server Settings ]#########################################################################
# used to delegate authentication to external identity provider
  dex:
    enabled: false
    name: dex-server

###[ Redis non-HA Settings ]#######################################################################
  redis:
    enabled: true
    name: redis
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

    ## redis-exporter metrics configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

      # -- Resource limits and requests for redis-exporter sidecar
#      resources:
#         limits:
#           cpu: 50m
#           memory: 64Mi
#         requests:
#           cpu: 10m
#           memory: 32Mi

###[ Redis HA Settings ]###########################################################################
# -- Enables the Redis HA subchart and disables the custom Redis single node deployment (above)
  redis-ha:
    enabled: false

###[ ArgoCD Server Settings ]######################################################################
  server:
    name: server
    extraArgs:
      - --insecure
      - --rootpath={{install.argocd.dashboard.path}}

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

    config:
      repositories: |
        - url: {{install.argocd.repository.url}}
          name: {{install.argocd.repository.name}}
          usernameSecret:
            name: {{install.argocd.repository.name}}-secret
            key: username
          passwordSecret:
            name: {{install.argocd.repository.name}}-secret
            key: password

    ## Server metrics service configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

###[ ArgoCD Repo Server Settings ]#################################################################
  repoServer:
    name: repo-server
    resources:
      limits:
        cpu: 150m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 512Mi

    ## Repo server metrics service configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

###[ ApplicationSet Controller Settings ]##########################################################
  applicationSet:
    enabled: true
    name: applicationset-controller

    # ApplicationSet controller metrics service configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

###[ Notifications Controller Settings ]###########################################################
  notifications:
    enabled: true
    name: notifications-controller

    # Notifications Controller metrics service configuration
#    metrics:
#      enabled: true
#      serviceMonitor:
#        enabled: true
#        namespace: "monitoring"
#        additionalLabels:
#           release: kube-stack-prometheus

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
