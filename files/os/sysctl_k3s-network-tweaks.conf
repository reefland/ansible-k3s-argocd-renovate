# the maximum Send Buffer size for all network protocols
# Default value:  212992
# Previous value: 8388608
net.core.wmem_max = 67108864

# the maximum Receive Buffer size for all network protocols
# Default value:  212992
# Previous value: 12582912
net.core.rmem_max = 67108864

# Set temp Send Buffer increase to 32MB:
# Default values:  4096 16384 4194304
# Previous values: 8192 32768 8388608
net.ipv4.tcp_wmem = 4096 65536 33554432

# Set temp Recv Buffer increase to 32MB:
# Default values:  4096 131072 6291456
# Previous values: 8192 131072 12582912
net.ipv4.tcp_rmem = 4096 87380 33554432

# Increase number of incoming connections backlog queue. Sets the maximum
# number of packets, queued on the INPUT side, when the interface receives
# packets faster than kernel can process them. can assist with bursts of
# network traffic, specifically when using multigigabit network connection
# speeds.
# Default value:  net.core.netdev_max_backlog = 1000
net.core.netdev_max_backlog = 16384

# Increase the maximum amount of option memory buffers
# Default vales: net.core.optmem_max = 20480
net.core.optmem_max = 65536

# TCP Fast Open is an extension to the transmission control protocol (TCP)
# that helps reduce network latency by enabling data to be exchanged during
# the senderâ€™s initial TCP SYN. Using the value 3 instead of the default 1
# allows TCP Fast Open for both incoming and outgoing connections.
# Default vale: net.ipv4.tcp_fastopen = 1
net.ipv4.tcp_fastopen = 3

# Linux will reuse an existing connection in the TIME-WAIT state for
# a new outgoing connection if the new timestamp is strictly bigger than the
# most recent timestamp recorded for the previous connection: an outgoing
# connection in the TIME-WAIT state can be reused after just one second.
# 2 is loopback adapters only.
# Default value: net.ipv4.tcp_tw_reuse = 2
net.ipv4.tcp_tw_reuse = 1
