---
#
# Install Sealed Secrets if Enabled before ArgoCD to allow ArgoCD to encrypt secrets for git commit.
#

# [ Install Sealed Secrets ]#######################################################################
- name: Install Sealed Secrets Block
  when:
    - inventory_hostname == groups['k3s_control'][0]
    - install.sealed_secrets.enabled | default(false)|bool
  tags:
    - install_sealed_secrets
  block:
    - name: Create Namespaces
      kubernetes.core.k8s:
        state: present
        name: "{{ item }}"
        kind: Namespace
      loop:
        - "{{ install.sealed_secrets.namespace }}"

    - name: Create Secret of Sealed Secret Pregenerated Private Key
      kubernetes.core.k8s:
        state: present
        template: "user-files/sealed-secrets/sealed-secrets-priv-key.yaml.j2"
      when:
        - install.sealed_secrets.use_pre_generated_private_key | default(false) | bool

    - name: Install Sealed Secrets Helm
      kubernetes.core.helm: # noqa yaml[line-length]
        name: sealed-secrets
        atomic: true
        release_namespace: "{{ install.sealed_secrets.namespace }}"
        chart_ref: "https://github.com/bitnami-labs/sealed-secrets/releases/download/helm-{{ install.sealed_secrets.install_version }}/sealed-secrets-{{ install.sealed_secrets.install_version | replace('v', '') }}.tgz"
        wait: true

    - name: Check Sealed Secret Pods are Running
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ install.sealed_secrets.namespace }}"
        label_selectors:
          - "{{ pod_label }}"
        wait: true
        wait_condition:
          type: Ready
        wait_sleep: 5
        wait_timeout: 120
      loop:
        - "app.kubernetes.io/name=sealed-secrets"
      loop_control:
        loop_var: pod_label
        label: "{{ pod_label }}"

    # Let Helm know not to manage Sealed Secrets anymore
    - name: Remove Sealed-Secrets from Helm
      ansible.builtin.command:
        argv:
          - /usr/local/bin/kubectl
          - delete
          - secret
          - -l
          - owner=helm,name=sealed-secret
          - -n
          - "{{ install.sealed_secrets.namespace }}"
      register: cmd
      changed_when: cmd.rc == 0

# Install KubeSeal Executable to all Control Nodes
- name: Install KubeSeal Executable
  ansible.builtin.shell: |
    set -euo pipefail
    VERSION=$(kubectl get pods -n {{ install.sealed_secrets.namespace }} -o jsonpath="{.items[*].spec.containers[*].image}" | tr -s '[[:space:]]' '\n' | uniq | grep sealed-secrets | cut -d ":" -f 2)
    echo "Fetch Kubeseal ${VERSION}"

    wget https://github.com/bitnami-labs/sealed-secrets/releases/download/${VERSION}/kubeseal-$(echo ${VERSION}|cut -c2-)-linux-amd64.tar.gz -O kubeseal.tar.gz

    tar -xvzf kubeseal.tar.gz

    install -m 755 kubeseal /usr/local/bin/kubeseal
  when:
    - inventory_hostname in groups['k3s_control']
    - install.sealed_secrets.enabled | default(false) | bool
  tags:
    - install_sealed_secrets
    - update_kubeseal_cli
