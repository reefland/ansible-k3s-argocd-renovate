---
### [ Install Prometheus Operator Block ]##########################################################
- name: Install Prometheus Operator Block
  block:

  - name: Create directory for Prometheus Operator files for non-root user
    file:
      path: "/home/{{install.os.non_root_user.name}}/prometheus-op"
      state: directory
      mode: '0700'
      owner: "{{install.os.non_root_user.name}}"
      group: "{{install.os.non_root_user.name}}"

  # K3s does not have control-plane in a pod, get IPs of nodes in control-plane
  - name: Determine InternalIP's for ControlPlane nodes
    command: >
      kubectl get nodes --selector=node-role.kubernetes.io/control-plane=true
      -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}'
    register: controlPlaneIPs

  - name: Copy Prometheus Template Files
    template:
      src: "templates/prometheus-op/{{item}}.j2"
      dest: "/home/{{install.os.non_root_user.name}}/prometheus-op/{{item}}"
      owner: "{{install.os.non_root_user.name}}"
      group: "{{install.os.non_root_user.name}}"
      mode: '0660'
    loop:
      - chart_values.yaml
      - prometheus_op_ingress_route.yaml
      - grafana_ingress_route.yaml
      - alertmanager_ingress_route.yaml
      - traefik_podmonitor.yaml
      - longhorn_servicemonitor.yaml

  - name: Copy K3S config.yaml if not exist
    copy:
     src: "files/prometheus-op/k3s_config.yaml"
     dest: "/etc/rancher/k3s/config.yaml"
     force: "no"

  - name: Add Prometheus Operator to Helm
    kubernetes.core.helm_repository:
      name: prometheus-community
      repo_url: "{{prometheus_operator.repo_url}}"

  - name: Create Prometheus Operator Namespace
    kubernetes.core.k8s:
      state: present
      name: "{{install.prometheus_operator.namespace}}"
      kind: Namespace

  - name: Install Prometheus Operator via Helm
    kubernetes.core.helm:
      update_repo_cache: yes
      atomic: yes
      create_namespace: yes
      chart_ref: "{{prometheus_operator.repo_chart_ref}}"
      chart_version: "{{install.prometheus_operator.install_version}}" 
      release_name: "{{install.prometheus_operator.release}}"
      release_namespace: "{{install.prometheus_operator.namespace}}"
      release_state: present
      values_files:
       - "/home/{{install.os.non_root_user.name}}/prometheus-op/chart_values.yaml"
      wait: yes
      wait_timeout: 5m

  - name: Check Prometheus Stack Operator Pods are Running
    k8s_info:
      kind: Pod
      namespace: "{{install.prometheus_operator.namespace}}"
      label_selectors:
        - "app=kube-prometheus-stack-operator"
      wait: yes
      wait_condition:
        type: Ready
      wait_sleep: 5
      wait_timeout: 120

  - name: Check Prometheus Pods are Running
    k8s_info:
      kind: Pod
      namespace: "{{install.prometheus_operator.namespace}}"
      label_selectors:
        - "app.kubernetes.io/name=prometheus"
      wait: yes
      wait_condition:
        type: Ready
      wait_sleep: 5
      wait_timeout: 120
 
  - name: Check Grafana Pods are Running
    k8s_info:
      kind: Pod
      namespace: "{{install.prometheus_operator.namespace}}"
      label_selectors:
        - "app.kubernetes.io/name=grafana"
      wait: yes
      wait_condition:
        type: Ready
      wait_sleep: 5
      wait_timeout: 120

  - name: Check Prometheus Node Export Pods are Running
    k8s_info:
      kind: Pod
      namespace: "{{install.prometheus_operator.namespace}}"
      label_selectors:
        - "app=prometheus-node-exporter"
      wait: yes
      wait_condition:
        type: Ready
      wait_sleep: 5
      wait_timeout: 120

  - name: Add Traefik Metrics ServiceMonitor for Prometheus
    kubernetes.core.k8s:
      state: present
      src: "/home/{{install.os.non_root_user.name}}/prometheus-op/traefik_podmonitor.yaml"
      namespace: "{{install.prometheus_operator.namespace}}"
      wait: yes
      wait_timeout: 300

  - name: Add Longhorn ServiceMonitor for Prometheus
    kubernetes.core.k8s:
      state: present
      src: "/home/{{install.os.non_root_user.name}}/prometheus-op/longhorn_servicemonitor.yaml"
      namespace: "{{install.prometheus_operator.namespace}}"
      wait: yes
      wait_timeout: 300
    when:
      - install.longhorn.install_this|default(false)|bool == true
 
  - name: Add Prometheus Web Interface Ingress Route for Traefik 
    kubernetes.core.k8s:
      state: present
      src: "/home/{{install.os.non_root_user.name}}/prometheus-op/prometheus_op_ingress_route.yaml"
      namespace: "{{install.prometheus_operator.namespace}}"
      wait: yes
      wait_timeout: 300
    when:
      - install.prometheus_operator.prometheus.dashboard.create_route|default(true)|bool == true

  - name: Add Grafana Dashboard Ingress Route for Traefik 
    kubernetes.core.k8s:
      state: present
      src: "/home/{{install.os.non_root_user.name}}/prometheus-op/grafana_ingress_route.yaml"
      namespace: "{{install.prometheus_operator.namespace}}"
      wait: yes
      wait_timeout: 300
    when:
      - install.prometheus_operator.grafana.dashboard.create_route|default(true)|bool == true

  - name: Add AlertManager Ingress Route for Traefik
    kubernetes.core.k8s:
      state: present
      src: "/home/{{install.os.non_root_user.name}}/prometheus-op/alertmanager_ingress_route.yaml"
      namespace: "{{install.prometheus_operator.namespace}}"
      wait: yes
      wait_timeout: 300
    when:
      - install.prometheus_operator.alertmanager.dashboard.create_route|default(true)|bool == true

  when:
    - install.prometheus_operator.install_this|default(false)|bool == true
    - inventory_hostname == groups['k3s_control'][0]
  tags:
    - install_prometheus_operator
    - never
