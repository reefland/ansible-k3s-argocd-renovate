---
# Setup non-root user, download k3s installation script and run it

- name: Install k3s Kubernetes Distribution Block
  block:

  - name: Uninstall Snapd Demon
    apt:
      name: "{{install.os.remove_snapd.packages}}"
      state: absent
      autoremove: yes
    when:
      - install.os.remove_snapd.remove_it|default(false)|bool == true 

  - name: Install Kubernetes packages for Ansible
    apt:
      name: "{{install.k3s.packages}}"
      state: present

  - name: Install Kubernetes pip3 packages for Ansible
    pip:
      name: "{{install.k3s.packages_pip}}"
      state: present

  - name: Add non-root user that will be used with Kubernetes
    ansible.builtin.user:
      name: "{{install.os.non_root_user.name}}"
      shell: "{{install.os.non_root_user.shell}}"
      groups: "{{install.os.non_root_user.groups}}"
      append: yes
      createhome: yes

  - name: Allow non-root user to have passwordless sudo convenience
    ansible.builtin.lineinfile:
      dest: /etc/sudoers
      line: "{{install.os.non_root_user.name}} ALL=(ALL) NOPASSWD: /usr/local/bin/kubectl"
      validate: "visudo -cf %s"
    when:
      - install.os.allow_passwordless_sudo|default(false)|bool == true

  - name: Download k3s install script
    get_url:
      url: "{{install.k3s.url}}"
      dest: "/home/{{install.os.non_root_user.name}}/k3s_install.sh"
      mode: ug+x

  - name: Create non-root user .kube directory
    file:
      path: "/home/{{install.os.non_root_user.name}}/.kube"
      state: directory
      mode: 0700
      owner: "{{install.os.non_root_user.name}}"
      group: "{{install.os.non_root_user.name}}"

  - name: Create root .kube directory
    file:
      path: "/root/.kube"
      state: directory
      mode: 0700
      owner: "root"
      group: "root"

  - name: Add export KUBECONFIG to .profile
    ansible.builtin.lineinfile:
      dest: "/home/{{install.os.non_root_user.name}}/.profile"
      line: "export KUBECONFIG=~/.kube/config"

  # Allow Helm to know where config file is
  - name: Add KUBECONFIG to /etc/environment
    ansible.builtin.lineinfile:
      dest: "/etc/environment"
      line: "KUBECONFIG=/etc/rancher/k3s/k3s.yaml"

  - name: Merge in disable options to cli options if local storage disabled
    set_fact:
      install.k3s.cli_options: "{{install.k3s.cli_options + cli_disable_options}}"
    when:
      - disable_local_path_as_default_storage_class|default(false)|bool == true

  - name: Execute k3s_install.sh and create k3s_install.log
    ansible.builtin.shell:
      cmd: "{{ install.k3s.cli_options|join(' ') }} /home/{{install.os.non_root_user.name}}/k3s_install.sh > /home/{{install.os.non_root_user.name}}/k3s_install.log"
      chdir: "/home/{{install.os.non_root_user.name}}"

  - name: Add alias of "k" for "kubectl"
    ansible.builtin.lineinfile:
      path: "/home/{{install.os.non_root_user.name}}/.bash_aliases"
      line: "alias {{install.k3s.alias.value}}='{{install.k3s.alias.command}}'"
      create: yes
      state: present
    when: install.k3s.alias.enabled|default(false)|bool == true

  tags:
    - install_k3s
