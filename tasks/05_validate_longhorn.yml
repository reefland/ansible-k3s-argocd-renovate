---
#
# Validate the longhorn installation is running as expected.
#

###[ Validate Longhorn Kubernetes Installation ]#########################################
- name: Validate Longhorn Kubernetes Installation Block
  block:
  - name: Check if Longhorn Manager Pod
    k8s_info:
      kind: Pod
      namespace: "{{install.longhorn.namespace}}"
      field_selectors:
        - "status.phase=Running"
      label_selectors:
        - "app=longhorn-manager"
    register: longhorn_pods_details

 # There are many longhorn pod types, this only checked a single one.
 # Set Fact if we can detect the manager pod is running
  - set_fact:
      longhorn_manager_running: true
    when: longhorn_pods_details|count|int > 0

  - name: Fail if Longhorn Manager Pod not running
    fail:
      msg: |
        Unable to detect Longhorn Manager pod is running, try:

        kubectl get pods -n {{install.longhorn.namespace}} -o wide
    when: longhorn_manager_running|bool == false

  - name: "Check if Longhorn storage class is created"
    k8s_info:
      kind: StorageClass
      namespace: "{{install.longhorn.namespace}}"
      field_selectors:
        - "metadata.name=longhorn"
    register: longhorn_storageclass_details
    until: longhorn_storageclass_details.resources[0].provisioner == "driver.longhorn.io"
    retries: 4
    delay: 5

  ###[ Perform Longhorn Claim and Validate Block ]#################################################
  - name: Perform Longhorn Test Claim and Validate Block
    block:
    - name: Perform Longhorn test claim
      kubernetes.core.k8s:
        src: "/home/{{install.os.non_root_user.name}}/longhorn/longhorn-test-claim.yaml"
        state: present
        namespace: "{{install.longhorn.namespace}}"
        wait: yes
        wait_timeout: 120

    - name: "Check if Longhorn test claim is created"
      k8s_info:
        kind: PersistentVolumeClaim
        namespace: "{{install.longhorn.namespace}}"
        field_selectors:
          - "metadata.name=longhorn-volv-pvc"
      register: longhorn_storage_claim_details
      until: longhorn_storage_claim_details.resources[0].status.phase == "Bound"
      retries: 5
      delay: 10

    - name: Remove Longhorn claim - validations passed
      kubernetes.core.k8s:
        src: "/home/{{install.os.non_root_user.name}}/longhorn/longhorn-test-claim.yaml"
        state: absent
        namespace: "{{install.longhorn.namespace}}"
        wait: yes
        wait_timeout: 120

    when: install.longhorn.test_claim.enabled|default(false)|bool == true
    
  tags:
    - validate_longhorn
  when:
    - inventory_hostname == groups['k3s_control'][0]
    - install.longhorn.install_this|default(false)|bool == true