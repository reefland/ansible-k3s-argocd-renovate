---
####################################################################################################
# This script is for installing k3s distribution of Kubernetes. k3s does not have native support
# for ZFS file system (will produce overlayfs errors).  
# See: https://github.com/k3s-io/k3s/discussions/3980
#
# This script by default will also install containerd and container network plugins packages which
# is configured to support ZFS.  Then k3s configuration will be updated to use containerd.
# Based on: https://blog.nobugware.com/post/2019/k3s-containterd-zfs/

###[ Load up the secret files ]####################################################################
- name: Include Secret Files
  include_vars: "{{ item }}"
  tags: ["always"]
  loop:
    - secrets/k3s_traefik_api_secrets.yml
    - secrets/truenas_api_secrets.yml
  no_log: "{{no_log_secrets|default(true)}}"

###[ Load up the variable files ]##################################################################
- name: Include Var Files
  include_vars: "{{ item }}"
  tags: ["always"]
  loop:
      - k3s.yml
      - containerd.yml
      - helm.yml
      - cert_manager.yml
      - democratic-csi.yml

###[ Detect ZFS UUID from ZFS on Root installations ]##############################################
- name: Detect ZFS Dataset UUID
  shell:
    cmd: "{{containerd.zfs.zfs_uuid_detect_cmd}}"
  register: UUID

###################################################################################################

###[ Detect & Capture Node Token when available ]##################################################
- name: Check if node-token file exists
  stat:
    path: "{{k3s.node_token_path}}"
  register: node_token_file
  tags: ["always"]
  
- name: Get Node Token and Add to Facts Block
  block:
  - name: Gather Node Token
    slurp:
      path: "{{k3s.node_token_path}}"
    register: node_token_output
    no_log: "{{no_log_secrets|default(true)}}"
    when: node_token_file.stat.exists == true

  - name: Clean and add node_token to facts
    set_fact:
      node_token: "{{ node_token_output.content | b64decode | regex_replace('\n', '')}}"
    no_log: "{{no_log_secrets|default(true)}}"
    when: node_token_file.stat.exists == true
  tags: ["always"]
###################################################################################################

- name: Include Task Files
  include_tasks: "{{task_names}}"
  tags: ["always"]
  loop:
    - 01_install_k3s.yml
    - 02_install_containerd.yml
    - 03_validate_k3s.yml
    - 04_install_helm_client.yml
    - 05_install_cert_manager.yml
    - 06_config_traefik_dns_certs.yml
    - 07_install_democratic_csi.yml
    - 08_validate_csi_iscsi.yml

  loop_control:
    loop_var: task_names

